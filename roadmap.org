*** TODO Features
   - [X] Objective scripts should be independently runnable
     - [X] Is it possible to make extract the code that makes them independent to a system, so each file doesn't need a copy of it?  Looks like no.
   - [ ] Boot systems, lv core runs launch and circularize, hands-off to payload core.  Payload core then runs mission script.
     - [ ] Using name tags, the craft can have one name, the lifter another, and the ship another, still.
   - [ ] Orbital parameters problem : Shouldn't have to edit the lv file, just to launch to higher altitude
   - [ ] Using the name tag to pass parameters seems a little sketchy
   - [ ] With the new boot systems, missions feel more like just glorified objectives.


**** Using the system
   - Lifters/Booster (Rockets) 
     - Lifters need control, access to the KSC mainframe, and a computer core.
     - The name tag of the core, will be the name of the lv/ the lv_boot looks for.
     - The lifter core expects to handoff execution to a core on the payload, after circularization.
     - The name tag of the lifter core is used to pass parameters to the lv script
     - The name tag of the payload core should contain the name of the ship in orbit.

       
** Sample development cycle
   Build a Launch vehicle (Lifter/Booster, etc).
   Give the lv a KOS core, have it boot with lv_boot, set the name tag to the name of the lv profile you want it to run, append with launch parameters.
   
   Build a payload (spacecraft, probe, etc).
   Give the payload a KOS core, have it boot with payload_boot, set the name tag to the name you want for the spacecraft, and/or the name of the missions script to run after launch to lko.
   
   Objectives
   Objectives can be run standalone, or as imports to a mission.  When writing your own, make sure to follow the template, so that you don't break the standalone system.
   
   Missions
   Missions can be from the ground up, all the way through to the return.  Use the textuuu
